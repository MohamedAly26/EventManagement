@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using EventManagement.Security
@inject NavigationManager Nav

<nav class="sidebar p-3">
    <div class="brand fw-bold mb-3">EventManagement</div>

    <!-- Public / regular users (hide for Admin & Supervisor) -->
    <AuthorizeView Context="auth">
        <Authorized>
            @if (!(auth.User.IsInRole("Admin") || auth.User.IsInRole("Supervisor")))
            {
                <NavLink href="/" Match="NavLinkMatch.All" class="nav-link rounded">
                    <span class="oi oi-home me-2"></span>Home
                </NavLink>

                <NavLink href="/me/subscriptions" class="nav-link rounded">
                    <span class="oi oi-list me-2"></span>My Dashboard
                </NavLink>
            }
        </Authorized>
        <NotAuthorized>
            <NavLink href="/" Match="NavLinkMatch.All" class="nav-link rounded">
                <span class="oi oi-home me-2"></span>Home
            </NavLink>
        </NotAuthorized>
    </AuthorizeView>

    <!-- Admin + Supervisor: manage events -->
    <AuthorizeView Policy="@Permissions.Names.ManageEvents">
        <Authorized>
            <div class="nav-header mt-3">Administration</div>
            <NavLink href="/admin/events" class="nav-link rounded">
                <span class="oi oi-cog me-2"></span>Manage Events
            </NavLink>
        </Authorized>
    </AuthorizeView>

    <!-- Supervisor (or anyone with ManageRoles): role matrix + user management -->
    <AuthorizeView Policy="@Permissions.Names.ManageRoles">
        <Authorized>
            <NavLink href="/admin/permissions" class="nav-link rounded">
                <span class="oi oi-lock-locked me-2"></span>Role Permissions
            </NavLink>
            <NavLink href="/supervisor/users" class="nav-link rounded">
                <span class="oi oi-people me-2"></span>User Management
            </NavLink>
        </Authorized>
    </AuthorizeView>

    <!-- Greeting + auth actions -->
    <div class="mt-3">
        <AuthorizeView Context="auth">
            <Authorized>
                @{
                    var u = auth.User;
                    string display =
                    u.IsInRole("Supervisor") ? "Supervisor" :
                    u.IsInRole("Admin") ? "Admin" :
                    (u.FindFirst("name")?.Value
                    ?? u.FindFirst(ClaimTypes.GivenName)?.Value
                    ?? u.FindFirst(ClaimTypes.Name)?.Value
                    ?? u.FindFirst(ClaimTypes.Email)?.Value
                    ?? u.Identity?.Name
                    ?? "User");
                    if (display.Contains("@")) display = display[..display.IndexOf('@')];
                }
                <div class="small text-muted px-1 mb-2">Hello, <b>@display</b></div>

                <form method="post" action="/app-logout" class="d-inline">
                    <button type="submit" class="btn btn-sm btn-outline-light w-100">Logout</button>
                </form>
            </Authorized>
            <NotAuthorized>
                <NavLink href="/account/login" class="nav-link rounded">Login</NavLink>
                <NavLink href="/account/register" class="nav-link rounded">Register</NavLink>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</nav>

@code { }
