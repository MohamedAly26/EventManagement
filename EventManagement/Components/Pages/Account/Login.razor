@page "/account/login"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Nav

<h3>Login</h3>

@if (!string.IsNullOrEmpty(_err))
{
    <div class="alert alert-@(_err == "confirm" ? "warning" : "danger")">
        @(
            _err switch
            {
                "confirm" => "Please confirm your email before logging in.",
                "invalid" => "Invalid email or password.",
                "err" => "Unexpected error. Try again.",
                _ => "Login failed."
            }
            )
</div>
}

<form method="post" action="/app-login" class="card p-3" autocomplete="on">
    <div class="mb-3">
        <label class="form-label">Email</label>
        <input name="email" type="email" class="form-control" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Password</label>
        <input name="password" type="password" class="form-control" required />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
    <a class="btn btn-link" href="/account/register">Register</a>
</form>

@code {
    private string? _err;

    protected override void OnParametersSet()
    {
        // Read ?e=... from the URL
        var uri = new Uri(Nav.Uri);
        var q = QueryHelpers.ParseQuery(uri.Query);
        _err = q.TryGetValue("e", out var v) ? v.ToString() : null;
    }
}
